Metadata-Version: 1.1
Name: sniffer
Version: 0.9.0
Summary: A command-line tool to check plagiarim in text and pdf
Home-page: https://github.com/dilawar/sniffer
Author: Dilawar Singh
Author-email: dilawars@iitb.ac.in
License: GNU-GPL
Description: <h1>sniffer</h1>
        <p>Code sniffer to check the similarity between text files. Works well with
        programming languages although the pdf are also supported.</p>
        <h1>Status</h1>
        <p>Under development. </p>
        <h1>Dependency</h1>
        <ol>
        <li>Python2.6 or later</li>
        <li>python-pdfminer (for pdf file)</li>
        <li>python-sqlite3</li>
        </ol>
        <h1>Usage</h1>
        <p>The default path for configuration file is <code>~/.config/sniffer/config</code>. For
        non-standard location, use <code>--config</code> option.</p>
        <p>python sniffer.py --config config-file-path</p>
        <p>See the following section on how to edit the <code>snifferrc</code> file.</p>
        <h1>Config file</h1>
        <pre><code>[source]
        # Dir where various folders containing source codes or text files are located.
        # This directory will be 'walked' and each subdirectory inside this directory
        # will be considered as belonging to different student. In short, inside
        # 'dir', each subdirectory will be compared with every other subdirectory.
        dir = /home/dilawar/Works/hpc21/2013ee668/Assignments/A4/Submissions
        
        # This is the regular expression of the names of files. If you want to compare
        # all files leave it empty or .* will do. In this example, we will only
        # consider files which are ended with vhdl or vhd extension.
        regex = .*(vhdl|vhd)$
        
        # Specify language of file.
        # Available : vhdl, verilog, ctype, text, pdf 
        language = vhdl
        
        # Compiler. Currently this is of no use.
        compiler = ghdl
        
        # make compare true if you want to compare. If this is not set to true, it won't
        # match. This is here for development purpose. In most cases, this should be
        # true.
        compare = true
        
        # Dump the results of analysis in directory of database.
        analyze_result = true
        
        # Currently useless.
        send_email = false
        
        [filter]
        # If this regex is found in the text of file, then the file is ignored. 
        regex = ((Madhav\s+Desai)|(entity\s+(reg|\w*mux\w*|unsigned\_(comparator|adder)|mux\dto\d|decoder\dto\d|Datapath)\s+is)|(operand1.+operand2.+result.+overflow)|(data\_in.+data\_out.+clock))
        regex_flags = DOTALL,IGNORECASE
        
        # larger size will be ignored. -1 for all. In Kb
        max_size = -1
        
        # Max words a text file can contains. -1 for 2^32.
        max_words = 10000
        # Mininum words a text files must contain.
        min_words = 100
        
        [algorithm]
        # Available algoritms : difflib, quick, 
        name = difflib
        
        [database]
        # Path where sqlite3 database should be saved. Generated graphviz files will
        # be saved to this file only. After match is complete, results are stored in
        # csv files. identical_severity.csv has the almost matching files followed
        # by very_high_serverity.csv, high_serverity.csv etc.
        path = /home/dilawar/Works/hpc21/2013ee668/Assignments/A4/db/
        
        # Name of the database. Leave it as it is. If :memory: is used then database
        # is build in memory. Untested feature.
        name = sniffer.sqlite3 
        #name = :memory:
        </code></pre><h1>CHANGES</h1>
        <p>Sun Feb  2 19:52:43 2014 </p>
        <ul>
        <li>Wrote the package for pypi.</li>
        </ul>
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Requires: Python (>=2.6)
